import { curry, filter, mean, map, sum } from "ramda";
import isNumeric from "./internal/isNumeric";
import std from "./std";
/**
 * Skew of a series.
 *
 * @func
 * @memberOf Z
 * @category Analysis
 * @param {Array} arr Series to calculate skew for
 * @return {Number}
 * @example
 *
 * const series = [7, 2, 30, 56, 75]
 * Z.skew(series)
 * // 0.17542841315728933
 */

var skew = curry(function (arr) {
  var filteredArr = filter(isNumeric, arr);
  var sampleStd = std(filteredArr);
  var stdCubed = Math.pow(sampleStd, 3);
  var sampleMean = mean(filteredArr);
  var diffs = map(function (x) {
    return x - sampleMean;
  }, filteredArr);
  var diffsCubed = map(function (x) {
    return Math.pow(x, 3);
  }, diffs);
  var summed = sum(diffsCubed);
  var n = filteredArr.length;
  return summed / n / stdCubed;
});
export default skew;