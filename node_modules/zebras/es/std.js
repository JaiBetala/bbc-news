import { curry, filter, mean, map, sum, divide, subtract } from "ramda";
import isNumeric from "./internal/isNumeric";
/**
 * Standard deviation of series.
 *
 * @func
 * @memberOf Z
 * @category Analysis
 * @param {Array} arr Series to calculate standard deviation for
 * @return {Number}
 * @example
 *
 * const series = [7, 2, 30, 56, 75]
 * Z.std(series)
 * // 31.36080356113344
 */

var std = curry(function (arr) {
  var filteredArr = filter(isNumeric, arr);
  var sampleMean = mean(filteredArr);
  var n = filteredArr.length;
  var diffs = map(function (x) {
    return x - sampleMean;
  }, filteredArr);
  var diffsSquared = map(function (x) {
    return Math.pow(x, 2);
  }, diffs);
  var summed = sum(diffsSquared);
  return Math.sqrt(divide(summed, subtract(n, 1)));
});
export default std;